type token =
  | EOF
  | LB
  | RB
  | LP
  | RP
  | MENUS
  | MENU
  | BUTTON
  | DEFAULT_FUNCTION
  | PLUS
  | MINUS
  | ALL
  | OR
  | CURSORS
  | PIXMAPS
  | ICONS
  | COLOR
  | SAVECOLOR
  | MONOCHROME
  | FUNCTION
  | ICONMGR_SHOW
  | ICONMGR
  | WINDOW_FUNCTION
  | ZOOM
  | ICONMGRS
  | ICONMGR_GEOMETRY
  | ICONMGR_NOSHOW
  | MAKE_TITLE
  | GRAYSCALE
  | ICONIFY_BY_UNMAPPING
  | DONT_ICONIFY_BY_UNMAPPING
  | NO_TITLE
  | AUTO_RAISE
  | NO_HILITE
  | ICON_REGION
  | META
  | SHIFT
  | LOCK
  | CONTROL
  | WINDOW
  | TITLE
  | ICON
  | ROOT
  | FRAME
  | COLON
  | EQUALS
  | SQUEEZE_TITLE
  | DONT_SQUEEZE_TITLE
  | START_ICONIFIED
  | NO_TITLE_HILITE
  | TITLE_HILITE
  | STICKY
  | MOVE
  | RESIZE
  | WAIT
  | SELECT
  | KILL
  | LEFT_TITLEBUTTON
  | RIGHT_TITLEBUTTON
  | NUMBER of (int)
  | KEYWORD of (Twm_t.keyword)
  | NKEYWORD of (Twm_t.nkeyword)
  | CKEYWORD of (Twm_t.clkeyword)
  | CLKEYWORD of (Twm_t.clkeyword)
  | FKEYWORD of (Twm_t.fkeyword)
  | FSKEYWORD of (Twm_t.fskeyword)
  | SKEYWORD of (Twm_t.skeyword)
  | DKEYWORD of (Twm_t.dkeyword)
  | JKEYWORD of (Twm_t.jkeyword)
  | WINDOW_RING
  | WARP_CURSOR
  | ERRORTOKEN
  | NO_STACKMODE
  | STRING of (string)

open Parsing;;
# 2 "twm_p.mly"
  (***********************************************************************)
(*                                                                     *)
(*                             ____                                    *)
(*                                                                     *)
(*       Fabrice Le Fessant, projet Para/SOR, INRIA Rocquencourt       *)
(*                                                                     *)
(*  Copyright 1999 Institut National de Recherche en Informatique et   *)
(*  Automatique.  Distributed only by permission.                      *)
(*                                                                     *)
(***********************************************************************)
  
  open Xtypes
  open Twm_t
      
      
      
# 96 "twm_p.ml"
let yytransl_const = [|
    0 (* EOF *);
  257 (* LB *);
  258 (* RB *);
  259 (* LP *);
  260 (* RP *);
  261 (* MENUS *);
  262 (* MENU *);
  263 (* BUTTON *);
  264 (* DEFAULT_FUNCTION *);
  265 (* PLUS *);
  266 (* MINUS *);
  267 (* ALL *);
  268 (* OR *);
  269 (* CURSORS *);
  270 (* PIXMAPS *);
  271 (* ICONS *);
  272 (* COLOR *);
  273 (* SAVECOLOR *);
  274 (* MONOCHROME *);
  275 (* FUNCTION *);
  276 (* ICONMGR_SHOW *);
  277 (* ICONMGR *);
  278 (* WINDOW_FUNCTION *);
  279 (* ZOOM *);
  280 (* ICONMGRS *);
  281 (* ICONMGR_GEOMETRY *);
  282 (* ICONMGR_NOSHOW *);
  283 (* MAKE_TITLE *);
  284 (* GRAYSCALE *);
  285 (* ICONIFY_BY_UNMAPPING *);
  286 (* DONT_ICONIFY_BY_UNMAPPING *);
  287 (* NO_TITLE *);
  288 (* AUTO_RAISE *);
  289 (* NO_HILITE *);
  290 (* ICON_REGION *);
  291 (* META *);
  292 (* SHIFT *);
  293 (* LOCK *);
  294 (* CONTROL *);
  295 (* WINDOW *);
  296 (* TITLE *);
  297 (* ICON *);
  298 (* ROOT *);
  299 (* FRAME *);
  300 (* COLON *);
  301 (* EQUALS *);
  302 (* SQUEEZE_TITLE *);
  303 (* DONT_SQUEEZE_TITLE *);
  304 (* START_ICONIFIED *);
  305 (* NO_TITLE_HILITE *);
  306 (* TITLE_HILITE *);
  307 (* STICKY *);
  308 (* MOVE *);
  309 (* RESIZE *);
  310 (* WAIT *);
  311 (* SELECT *);
  312 (* KILL *);
  313 (* LEFT_TITLEBUTTON *);
  314 (* RIGHT_TITLEBUTTON *);
  325 (* WINDOW_RING *);
  326 (* WARP_CURSOR *);
  327 (* ERRORTOKEN *);
  328 (* NO_STACKMODE *);
    0|]

let yytransl_block = [|
  315 (* NUMBER *);
  316 (* KEYWORD *);
  317 (* NKEYWORD *);
  318 (* CKEYWORD *);
  319 (* CLKEYWORD *);
  320 (* FKEYWORD *);
  321 (* FSKEYWORD *);
  322 (* SKEYWORD *);
  323 (* DKEYWORD *);
  324 (* JKEYWORD *);
  329 (* STRING *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\002\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\004\000\005\000\006\000\015\000\
\015\000\015\000\024\000\024\000\024\000\024\000\024\000\017\000\
\017\000\017\000\025\000\025\000\025\000\025\000\025\000\025\000\
\025\000\025\000\016\000\016\000\016\000\026\000\026\000\026\000\
\026\000\026\000\026\000\026\000\026\000\026\000\010\000\027\000\
\027\000\028\000\011\000\029\000\029\000\030\000\030\000\030\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\022\000\031\000\031\000\032\000\032\000\
\032\000\023\000\034\000\034\000\035\000\035\000\033\000\036\000\
\036\000\037\000\007\000\007\000\007\000\007\000\038\000\038\000\
\018\000\040\000\040\000\041\000\041\000\012\000\042\000\042\000\
\043\000\021\000\044\000\044\000\045\000\020\000\046\000\046\000\
\047\000\019\000\048\000\048\000\049\000\049\000\013\000\013\000\
\039\000\039\000\039\000\014\000\008\000\009\000\000\000"

let yylen = "\002\000\
\002\000\000\000\002\000\001\000\001\000\001\000\001\000\001\000\
\006\000\003\000\002\000\002\000\001\000\002\000\002\000\002\000\
\001\000\004\000\004\000\002\000\002\000\007\000\007\000\002\000\
\002\000\001\000\002\000\002\000\002\000\001\000\002\000\001\000\
\002\000\001\000\002\000\001\000\002\000\002\000\002\000\008\000\
\003\000\003\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\001\000\002\000\001\000\002\000\002\000\000\000\
\002\000\003\000\001\000\001\000\001\000\001\000\002\000\000\000\
\002\000\003\000\001\000\001\000\001\000\001\000\001\000\001\000\
\001\000\001\000\000\000\002\000\003\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\001\000\001\000\003\000\000\000\
\002\000\002\000\003\000\000\000\002\000\003\000\002\000\003\000\
\002\000\003\000\002\000\003\000\002\000\003\000\002\000\003\000\
\002\000\003\000\002\000\003\000\002\000\003\000\002\000\003\000\
\002\000\003\000\002\000\003\000\000\000\002\000\002\000\003\000\
\002\000\003\000\000\000\002\000\001\000\001\000\003\000\000\000\
\002\000\002\000\001\000\004\000\001\000\002\000\000\000\005\000\
\003\000\000\000\002\000\003\000\004\000\003\000\000\000\002\000\
\001\000\003\000\000\000\002\000\002\000\003\000\000\000\002\000\
\001\000\003\000\000\000\002\000\002\000\007\000\001\000\002\000\
\001\000\002\000\002\000\002\000\001\000\001\000\002\000"

let yydefred = "\000\000\
\002\000\000\000\167\000\000\000\004\000\001\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\053\000\000\000\000\000\000\000\
\000\000\000\000\165\000\003\000\005\000\006\000\007\000\008\000\
\000\000\000\000\000\000\166\000\164\000\159\000\000\000\048\000\
\092\000\015\000\088\000\014\000\147\000\043\000\117\000\044\000\
\123\000\046\000\047\000\000\000\143\000\028\000\049\000\012\000\
\138\000\027\000\000\000\025\000\037\000\045\000\016\000\024\000\
\035\000\039\000\031\000\000\000\135\000\134\000\038\000\029\000\
\000\000\000\000\055\000\054\000\052\000\050\000\033\000\056\000\
\056\000\020\000\021\000\155\000\000\000\041\000\160\000\000\000\
\000\000\000\000\000\000\000\000\151\000\042\000\000\000\000\000\
\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\091\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\093\000\087\000\000\000\
\089\000\146\000\000\000\148\000\116\000\000\000\000\000\118\000\
\122\000\126\000\125\000\124\000\000\000\142\000\145\000\144\000\
\137\000\000\000\139\000\000\000\132\000\000\000\018\000\019\000\
\056\000\000\000\060\000\061\000\062\000\075\000\057\000\064\000\
\154\000\000\000\156\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\090\000\
\149\000\121\000\000\000\150\000\153\000\152\000\000\000\000\000\
\000\000\000\000\063\000\000\000\000\000\000\000\157\000\000\000\
\110\000\102\000\100\000\096\000\098\000\094\000\104\000\106\000\
\108\000\112\000\114\000\128\000\120\000\000\000\140\000\009\000\
\000\000\000\000\161\000\000\000\085\000\075\000\083\000\084\000\
\078\000\079\000\080\000\081\000\082\000\000\000\086\000\076\000\
\074\000\064\000\072\000\073\000\067\000\068\000\069\000\070\000\
\071\000\000\000\065\000\000\000\000\000\000\000\141\000\162\000\
\163\000\136\000\000\000\022\000\000\000\023\000\000\000\040\000\
\127\000\000\000\129\000\000\000\130\000\000\000\158\000"

let yydgoto = "\002\000\
\003\000\004\000\044\000\045\000\046\000\047\000\048\000\231\000\
\053\000\060\000\058\000\070\000\056\000\050\000\118\000\196\000\
\197\000\074\000\102\000\110\000\062\000\064\000\066\000\167\000\
\243\000\232\000\105\000\137\000\104\000\134\000\107\000\144\000\
\213\000\108\000\148\000\246\000\003\001\115\000\220\000\112\000\
\155\000\111\000\152\000\106\000\140\000\149\000\190\000\120\000\
\171\000"

let yysindex = "\018\000\
\000\000\000\000\000\000\001\000\000\000\000\000\208\254\234\254\
\245\254\054\255\062\255\065\255\066\255\067\255\066\255\208\254\
\069\255\245\254\234\254\070\255\208\254\069\255\069\255\066\255\
\069\255\069\255\069\255\069\255\069\255\208\254\086\255\069\255\
\069\255\069\255\208\254\208\254\000\000\234\254\208\254\069\255\
\069\255\069\255\000\000\000\000\000\000\000\000\000\000\000\000\
\043\255\231\254\046\255\000\000\000\000\000\000\208\254\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\090\255\000\000\000\000\000\000\000\000\
\000\000\000\000\234\254\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\025\255\000\000\000\000\000\000\000\000\
\050\255\051\255\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\208\254\000\000\000\000\053\003\
\012\255\003\255\011\255\002\255\000\000\000\000\004\255\005\255\
\000\000\032\255\007\255\245\254\245\254\006\255\105\255\008\255\
\059\255\000\000\208\254\208\254\208\254\208\254\208\254\208\254\
\208\254\208\254\208\254\208\254\208\254\000\000\000\000\208\254\
\000\000\000\000\208\254\000\000\000\000\208\254\208\254\000\000\
\000\000\000\000\000\000\000\000\019\255\000\000\000\000\000\000\
\000\000\208\254\000\000\234\254\000\000\030\255\000\000\000\000\
\000\000\234\254\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\021\255\000\000\208\254\208\254\208\254\208\254\208\254\
\208\254\208\254\208\254\208\254\208\254\208\254\208\254\000\000\
\000\000\000\000\104\255\000\000\000\000\000\000\213\254\234\254\
\013\255\077\255\000\000\017\255\189\255\208\254\000\000\102\255\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\234\254\000\000\000\000\
\234\254\234\254\000\000\234\254\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\245\254\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\245\254\000\000\074\255\108\255\009\255\000\000\000\000\
\000\000\000\000\177\255\000\000\246\000\000\000\208\254\000\000\
\000\000\208\254\000\000\106\255\000\000\245\254\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\069\000\000\000\000\000\137\000\000\000\000\000\
\205\000\000\000\036\001\000\000\104\001\000\000\172\001\240\001\
\000\000\071\002\000\000\000\000\000\000\000\000\000\000\000\000\
\139\002\207\002\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\019\003\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\122\255\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\076\003\093\003\116\003\133\003\
\156\003\173\003\196\003\213\003\236\003\253\003\020\004\000\000\
\000\000\000\000\031\255\000\000\000\000\000\000\000\000\000\000\
\000\000\087\255\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\092\255\000\000\100\255\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\255\
\245\255\000\000\000\000\040\003\240\255\000\000\174\255\164\255\
\168\255\000\000\158\255\000\000\000\000\021\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000"

let yytablesize = 1356
let yytable = "\049\000\
\006\000\071\000\051\000\145\000\138\000\150\000\153\000\072\000\
\157\000\169\000\001\001\068\000\141\000\135\000\119\000\052\000\
\075\000\161\000\001\000\097\000\188\000\217\000\218\000\198\000\
\043\000\084\000\091\000\221\000\222\000\043\000\089\000\090\000\
\119\000\099\000\092\000\067\000\052\000\223\000\054\000\055\000\
\162\000\163\000\164\000\165\000\078\000\098\000\100\000\043\000\
\101\000\166\000\103\000\224\000\054\000\055\000\057\000\225\000\
\226\000\227\000\228\000\229\000\230\000\136\000\059\000\113\000\
\146\000\061\000\063\000\065\000\013\000\069\000\073\000\052\000\
\142\000\143\000\043\000\043\000\043\000\043\000\194\000\043\000\
\043\000\043\000\054\000\055\000\054\000\055\000\085\000\096\000\
\161\000\043\000\109\000\114\000\119\000\119\000\116\000\117\000\
\121\000\193\000\156\000\159\000\160\000\139\000\172\000\147\000\
\212\000\245\000\151\000\154\000\100\000\006\001\158\000\162\000\
\163\000\164\000\165\000\170\000\161\000\255\000\173\000\174\000\
\175\000\176\000\177\000\178\000\179\000\180\000\181\000\182\000\
\183\000\251\000\058\000\184\000\189\000\059\000\185\000\077\000\
\026\000\186\000\187\000\162\000\163\000\164\000\165\000\066\000\
\192\000\253\000\000\001\000\000\168\000\191\000\195\000\000\000\
\000\000\199\000\000\000\000\000\059\000\059\000\059\000\059\000\
\000\000\000\000\000\000\000\000\000\000\059\000\000\000\200\000\
\201\000\202\000\203\000\204\000\205\000\206\000\207\000\208\000\
\209\000\210\000\211\000\215\000\216\000\219\000\000\000\000\000\
\000\000\000\000\214\000\221\000\222\000\000\000\000\000\000\000\
\000\000\244\000\000\000\000\000\000\000\223\000\000\000\233\000\
\234\000\000\000\247\000\000\000\017\000\248\000\249\000\000\000\
\250\000\235\000\000\000\224\000\000\000\252\000\000\000\225\000\
\226\000\227\000\228\000\229\000\000\000\000\000\000\000\236\000\
\000\000\254\000\000\000\237\000\238\000\239\000\240\000\241\000\
\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\002\001\000\000\000\000\000\000\007\001\000\000\000\000\
\000\000\043\000\004\001\000\000\000\000\005\001\000\000\000\000\
\005\000\000\000\000\000\000\000\000\000\000\000\007\000\008\000\
\009\000\000\000\000\000\000\000\000\000\010\000\011\000\012\000\
\013\000\014\000\015\000\016\000\017\000\000\000\018\000\019\000\
\020\000\021\000\022\000\023\000\024\000\025\000\026\000\027\000\
\028\000\029\000\030\000\036\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\031\000\032\000\
\033\000\034\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\035\000\036\000\000\000\037\000\038\000\000\000\000\000\
\000\000\000\000\039\000\000\000\013\000\040\000\041\000\000\000\
\042\000\043\000\013\000\013\000\013\000\000\000\000\000\000\000\
\000\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
\013\000\000\000\013\000\013\000\013\000\013\000\013\000\013\000\
\013\000\013\000\013\000\013\000\013\000\013\000\013\000\032\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\013\000\013\000\013\000\013\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\013\000\013\000\000\000\
\013\000\013\000\000\000\000\000\000\000\000\000\013\000\000\000\
\026\000\013\000\013\000\000\000\013\000\013\000\026\000\026\000\
\026\000\000\000\000\000\000\000\000\000\026\000\026\000\026\000\
\026\000\026\000\026\000\026\000\026\000\000\000\026\000\026\000\
\026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\131\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\026\000\026\000\
\026\000\026\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\026\000\026\000\000\000\026\000\026\000\000\000\000\000\
\000\000\000\000\026\000\000\000\017\000\026\000\026\000\000\000\
\026\000\026\000\017\000\017\000\017\000\000\000\000\000\000\000\
\000\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
\017\000\000\000\017\000\017\000\017\000\017\000\017\000\017\000\
\017\000\017\000\017\000\017\000\017\000\017\000\017\000\133\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\017\000\017\000\017\000\017\000\000\000\000\000\
\233\000\234\000\000\000\000\000\000\000\017\000\017\000\000\000\
\017\000\017\000\235\000\000\000\000\000\000\000\017\000\000\000\
\000\000\017\000\017\000\000\000\017\000\017\000\000\000\000\000\
\236\000\000\000\000\000\000\000\237\000\238\000\239\000\240\000\
\241\000\000\000\000\000\036\000\000\000\000\000\000\000\000\000\
\000\000\036\000\036\000\036\000\000\000\000\000\000\000\000\000\
\036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
\000\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
\036\000\036\000\036\000\036\000\036\000\036\000\030\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\036\000\036\000\036\000\036\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\036\000\036\000\000\000\036\000\
\036\000\000\000\000\000\000\000\000\000\036\000\000\000\032\000\
\036\000\036\000\000\000\036\000\036\000\032\000\032\000\032\000\
\000\000\000\000\000\000\000\000\032\000\032\000\032\000\032\000\
\032\000\032\000\032\000\032\000\000\000\032\000\032\000\032\000\
\032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
\032\000\032\000\051\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\032\000\032\000\032\000\
\032\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\032\000\032\000\000\000\032\000\032\000\000\000\000\000\000\000\
\000\000\032\000\000\000\131\000\032\000\032\000\000\000\032\000\
\032\000\131\000\131\000\131\000\000\000\000\000\000\000\000\000\
\131\000\131\000\131\000\131\000\131\000\131\000\131\000\131\000\
\000\000\131\000\131\000\131\000\131\000\131\000\131\000\131\000\
\131\000\131\000\131\000\131\000\131\000\131\000\034\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\131\000\131\000\131\000\131\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\131\000\131\000\000\000\131\000\
\131\000\000\000\000\000\000\000\000\000\131\000\000\000\133\000\
\131\000\131\000\000\000\131\000\131\000\133\000\133\000\133\000\
\000\000\000\000\000\000\000\000\133\000\133\000\133\000\133\000\
\133\000\133\000\133\000\133\000\000\000\133\000\133\000\133\000\
\133\000\133\000\133\000\133\000\133\000\133\000\133\000\133\000\
\133\000\133\000\011\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\133\000\133\000\133\000\
\133\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\133\000\133\000\000\000\133\000\133\000\000\000\000\000\000\000\
\000\000\133\000\000\000\000\000\133\000\133\000\000\000\133\000\
\133\000\000\000\000\000\000\000\000\000\076\000\077\000\000\000\
\079\000\080\000\081\000\082\000\083\000\000\000\030\000\086\000\
\087\000\088\000\000\000\000\000\030\000\030\000\030\000\093\000\
\094\000\095\000\000\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\000\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\030\000\030\000\030\000\030\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\000\
\030\000\000\000\030\000\030\000\000\000\000\000\000\000\000\000\
\030\000\000\000\051\000\030\000\030\000\000\000\030\000\030\000\
\051\000\051\000\051\000\000\000\000\000\000\000\000\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\000\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\051\000\051\000\051\000\051\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\051\000\051\000\000\000\051\000\051\000\
\000\000\000\000\000\000\000\000\051\000\000\000\034\000\051\000\
\051\000\000\000\051\000\051\000\034\000\034\000\034\000\000\000\
\000\000\000\000\000\000\034\000\034\000\034\000\034\000\034\000\
\034\000\034\000\034\000\000\000\034\000\034\000\034\000\034\000\
\034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
\034\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\034\000\034\000\034\000\034\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\000\
\034\000\000\000\034\000\034\000\000\000\000\000\000\000\000\000\
\034\000\000\000\011\000\034\000\034\000\000\000\034\000\034\000\
\011\000\011\000\011\000\000\000\000\000\000\000\000\000\011\000\
\011\000\011\000\011\000\011\000\011\000\011\000\011\000\000\000\
\011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
\011\000\011\000\011\000\011\000\011\000\000\000\122\000\000\000\
\000\000\000\000\123\000\124\000\000\000\000\000\000\000\000\000\
\011\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\
\000\000\125\000\000\000\011\000\011\000\111\000\011\000\011\000\
\000\000\111\000\111\000\000\000\011\000\000\000\000\000\011\000\
\011\000\000\000\011\000\011\000\126\000\127\000\103\000\128\000\
\111\000\000\000\103\000\103\000\000\000\000\000\000\000\000\000\
\129\000\130\000\131\000\132\000\133\000\000\000\000\000\000\000\
\000\000\103\000\000\000\111\000\111\000\101\000\111\000\000\000\
\000\000\101\000\101\000\000\000\000\000\000\000\000\000\111\000\
\111\000\111\000\111\000\111\000\103\000\103\000\097\000\103\000\
\101\000\000\000\097\000\097\000\000\000\000\000\000\000\000\000\
\103\000\103\000\103\000\103\000\103\000\000\000\000\000\000\000\
\000\000\097\000\000\000\101\000\101\000\099\000\101\000\000\000\
\000\000\099\000\099\000\000\000\000\000\000\000\000\000\101\000\
\101\000\101\000\101\000\101\000\097\000\097\000\095\000\097\000\
\099\000\000\000\095\000\095\000\000\000\000\000\000\000\000\000\
\097\000\097\000\097\000\097\000\097\000\000\000\000\000\000\000\
\000\000\095\000\000\000\099\000\099\000\105\000\099\000\000\000\
\000\000\105\000\105\000\000\000\000\000\000\000\000\000\099\000\
\099\000\099\000\099\000\099\000\095\000\095\000\107\000\095\000\
\105\000\000\000\107\000\107\000\000\000\000\000\000\000\000\000\
\095\000\095\000\095\000\095\000\095\000\000\000\000\000\000\000\
\000\000\107\000\000\000\105\000\105\000\109\000\105\000\000\000\
\000\000\109\000\109\000\000\000\000\000\000\000\000\000\105\000\
\105\000\105\000\105\000\105\000\107\000\107\000\113\000\107\000\
\109\000\000\000\113\000\113\000\000\000\000\000\000\000\000\000\
\107\000\107\000\107\000\107\000\107\000\000\000\000\000\000\000\
\000\000\113\000\000\000\109\000\109\000\115\000\109\000\000\000\
\000\000\115\000\115\000\000\000\000\000\000\000\000\000\109\000\
\109\000\109\000\109\000\109\000\113\000\113\000\000\000\113\000\
\115\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\113\000\113\000\113\000\113\000\113\000\000\000\000\000\000\000\
\000\000\000\000\000\000\115\000\115\000\000\000\115\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\115\000\
\115\000\115\000\115\000\115\000"

let yycheck = "\004\000\
\000\000\018\000\007\000\002\001\002\001\002\001\002\001\019\000\
\002\001\002\001\002\001\016\000\002\001\002\001\097\000\059\001\
\021\000\012\001\001\000\045\001\002\001\009\001\010\001\003\001\
\073\001\030\000\038\000\011\001\012\001\073\001\035\000\036\000\
\002\001\050\000\039\000\015\000\059\001\021\001\064\001\065\001\
\035\001\036\001\037\001\038\001\024\000\050\000\001\001\073\001\
\003\001\044\001\055\000\035\001\064\001\065\001\001\001\039\001\
\040\001\041\001\042\001\043\001\044\001\050\001\001\001\075\000\
\063\001\001\001\001\001\001\001\000\000\001\001\001\001\059\001\
\062\001\063\001\073\001\073\001\073\001\073\001\161\000\073\001\
\073\001\073\001\064\001\065\001\064\001\065\001\001\001\045\001\
\012\001\073\001\001\001\067\001\062\001\063\001\045\001\045\001\
\101\000\068\001\067\001\116\000\117\000\106\000\044\001\108\000\
\001\001\004\001\111\000\112\000\001\001\004\001\115\000\035\001\
\036\001\037\001\038\001\120\000\012\001\044\001\123\000\124\000\
\125\000\126\000\127\000\128\000\129\000\130\000\131\000\132\000\
\133\000\222\000\044\001\136\000\149\000\012\001\139\000\044\001\
\000\000\142\000\143\000\035\001\036\001\037\001\038\001\044\001\
\156\000\234\000\245\000\255\255\044\001\154\000\162\000\255\255\
\255\255\170\000\255\255\255\255\035\001\036\001\037\001\038\001\
\255\255\255\255\255\255\255\255\255\255\044\001\255\255\172\000\
\173\000\174\000\175\000\176\000\177\000\178\000\179\000\180\000\
\181\000\182\000\183\000\191\000\192\000\193\000\255\255\255\255\
\255\255\255\255\191\000\011\001\012\001\255\255\255\255\255\255\
\255\255\198\000\255\255\255\255\255\255\021\001\255\255\011\001\
\012\001\255\255\214\000\255\255\000\000\217\000\218\000\255\255\
\220\000\021\001\255\255\035\001\255\255\230\000\255\255\039\001\
\040\001\041\001\042\001\043\001\255\255\255\255\255\255\035\001\
\255\255\242\000\255\255\039\001\040\001\041\001\042\001\043\001\
\044\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\246\000\255\255\255\255\255\255\006\001\255\255\255\255\
\255\255\073\001\255\000\255\255\255\255\002\001\255\255\255\255\
\000\001\255\255\255\255\255\255\255\255\255\255\006\001\007\001\
\008\001\255\255\255\255\255\255\255\255\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\000\000\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\046\001\047\001\
\048\001\049\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\057\001\058\001\255\255\060\001\061\001\255\255\255\255\
\255\255\255\255\066\001\255\255\000\001\069\001\070\001\255\255\
\072\001\073\001\006\001\007\001\008\001\255\255\255\255\255\255\
\255\255\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\255\255\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\000\000\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\046\001\047\001\048\001\049\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\057\001\058\001\255\255\
\060\001\061\001\255\255\255\255\255\255\255\255\066\001\255\255\
\000\001\069\001\070\001\255\255\072\001\073\001\006\001\007\001\
\008\001\255\255\255\255\255\255\255\255\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\000\000\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\046\001\047\001\
\048\001\049\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\057\001\058\001\255\255\060\001\061\001\255\255\255\255\
\255\255\255\255\066\001\255\255\000\001\069\001\070\001\255\255\
\072\001\073\001\006\001\007\001\008\001\255\255\255\255\255\255\
\255\255\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\255\255\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\000\000\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\046\001\047\001\048\001\049\001\255\255\255\255\
\011\001\012\001\255\255\255\255\255\255\057\001\058\001\255\255\
\060\001\061\001\021\001\255\255\255\255\255\255\066\001\255\255\
\255\255\069\001\070\001\255\255\072\001\073\001\255\255\255\255\
\035\001\255\255\255\255\255\255\039\001\040\001\041\001\042\001\
\043\001\255\255\255\255\000\001\255\255\255\255\255\255\255\255\
\255\255\006\001\007\001\008\001\255\255\255\255\255\255\255\255\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\255\255\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\000\000\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\046\001\047\001\048\001\049\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\057\001\058\001\255\255\060\001\
\061\001\255\255\255\255\255\255\255\255\066\001\255\255\000\001\
\069\001\070\001\255\255\072\001\073\001\006\001\007\001\008\001\
\255\255\255\255\255\255\255\255\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\255\255\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\000\000\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\046\001\047\001\048\001\
\049\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\057\001\058\001\255\255\060\001\061\001\255\255\255\255\255\255\
\255\255\066\001\255\255\000\001\069\001\070\001\255\255\072\001\
\073\001\006\001\007\001\008\001\255\255\255\255\255\255\255\255\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\255\255\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\000\000\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\046\001\047\001\048\001\049\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\057\001\058\001\255\255\060\001\
\061\001\255\255\255\255\255\255\255\255\066\001\255\255\000\001\
\069\001\070\001\255\255\072\001\073\001\006\001\007\001\008\001\
\255\255\255\255\255\255\255\255\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\255\255\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\000\000\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\046\001\047\001\048\001\
\049\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\057\001\058\001\255\255\060\001\061\001\255\255\255\255\255\255\
\255\255\066\001\255\255\255\255\069\001\070\001\255\255\072\001\
\073\001\255\255\255\255\255\255\255\255\022\000\023\000\255\255\
\025\000\026\000\027\000\028\000\029\000\255\255\000\001\032\000\
\033\000\034\000\255\255\255\255\006\001\007\001\008\001\040\000\
\041\000\042\000\255\255\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\046\001\047\001\048\001\049\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\057\001\
\058\001\255\255\060\001\061\001\255\255\255\255\255\255\255\255\
\066\001\255\255\000\001\069\001\070\001\255\255\072\001\073\001\
\006\001\007\001\008\001\255\255\255\255\255\255\255\255\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\255\255\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\046\001\047\001\048\001\049\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\057\001\058\001\255\255\060\001\061\001\
\255\255\255\255\255\255\255\255\066\001\255\255\000\001\069\001\
\070\001\255\255\072\001\073\001\006\001\007\001\008\001\255\255\
\255\255\255\255\255\255\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\046\001\047\001\048\001\049\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\057\001\
\058\001\255\255\060\001\061\001\255\255\255\255\255\255\255\255\
\066\001\255\255\000\001\069\001\070\001\255\255\072\001\073\001\
\006\001\007\001\008\001\255\255\255\255\255\255\255\255\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\255\255\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\255\255\002\001\255\255\
\255\255\255\255\006\001\007\001\255\255\255\255\255\255\255\255\
\046\001\047\001\048\001\049\001\255\255\255\255\255\255\255\255\
\255\255\021\001\255\255\057\001\058\001\002\001\060\001\061\001\
\255\255\006\001\007\001\255\255\066\001\255\255\255\255\069\001\
\070\001\255\255\072\001\073\001\040\001\041\001\002\001\043\001\
\021\001\255\255\006\001\007\001\255\255\255\255\255\255\255\255\
\052\001\053\001\054\001\055\001\056\001\255\255\255\255\255\255\
\255\255\021\001\255\255\040\001\041\001\002\001\043\001\255\255\
\255\255\006\001\007\001\255\255\255\255\255\255\255\255\052\001\
\053\001\054\001\055\001\056\001\040\001\041\001\002\001\043\001\
\021\001\255\255\006\001\007\001\255\255\255\255\255\255\255\255\
\052\001\053\001\054\001\055\001\056\001\255\255\255\255\255\255\
\255\255\021\001\255\255\040\001\041\001\002\001\043\001\255\255\
\255\255\006\001\007\001\255\255\255\255\255\255\255\255\052\001\
\053\001\054\001\055\001\056\001\040\001\041\001\002\001\043\001\
\021\001\255\255\006\001\007\001\255\255\255\255\255\255\255\255\
\052\001\053\001\054\001\055\001\056\001\255\255\255\255\255\255\
\255\255\021\001\255\255\040\001\041\001\002\001\043\001\255\255\
\255\255\006\001\007\001\255\255\255\255\255\255\255\255\052\001\
\053\001\054\001\055\001\056\001\040\001\041\001\002\001\043\001\
\021\001\255\255\006\001\007\001\255\255\255\255\255\255\255\255\
\052\001\053\001\054\001\055\001\056\001\255\255\255\255\255\255\
\255\255\021\001\255\255\040\001\041\001\002\001\043\001\255\255\
\255\255\006\001\007\001\255\255\255\255\255\255\255\255\052\001\
\053\001\054\001\055\001\056\001\040\001\041\001\002\001\043\001\
\021\001\255\255\006\001\007\001\255\255\255\255\255\255\255\255\
\052\001\053\001\054\001\055\001\056\001\255\255\255\255\255\255\
\255\255\021\001\255\255\040\001\041\001\002\001\043\001\255\255\
\255\255\006\001\007\001\255\255\255\255\255\255\255\255\052\001\
\053\001\054\001\055\001\056\001\040\001\041\001\255\255\043\001\
\021\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\052\001\053\001\054\001\055\001\056\001\255\255\255\255\255\255\
\255\255\255\255\255\255\040\001\041\001\255\255\043\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\052\001\
\053\001\054\001\055\001\056\001"

let yynames_const = "\
  EOF\000\
  LB\000\
  RB\000\
  LP\000\
  RP\000\
  MENUS\000\
  MENU\000\
  BUTTON\000\
  DEFAULT_FUNCTION\000\
  PLUS\000\
  MINUS\000\
  ALL\000\
  OR\000\
  CURSORS\000\
  PIXMAPS\000\
  ICONS\000\
  COLOR\000\
  SAVECOLOR\000\
  MONOCHROME\000\
  FUNCTION\000\
  ICONMGR_SHOW\000\
  ICONMGR\000\
  WINDOW_FUNCTION\000\
  ZOOM\000\
  ICONMGRS\000\
  ICONMGR_GEOMETRY\000\
  ICONMGR_NOSHOW\000\
  MAKE_TITLE\000\
  GRAYSCALE\000\
  ICONIFY_BY_UNMAPPING\000\
  DONT_ICONIFY_BY_UNMAPPING\000\
  NO_TITLE\000\
  AUTO_RAISE\000\
  NO_HILITE\000\
  ICON_REGION\000\
  META\000\
  SHIFT\000\
  LOCK\000\
  CONTROL\000\
  WINDOW\000\
  TITLE\000\
  ICON\000\
  ROOT\000\
  FRAME\000\
  COLON\000\
  EQUALS\000\
  SQUEEZE_TITLE\000\
  DONT_SQUEEZE_TITLE\000\
  START_ICONIFIED\000\
  NO_TITLE_HILITE\000\
  TITLE_HILITE\000\
  STICKY\000\
  MOVE\000\
  RESIZE\000\
  WAIT\000\
  SELECT\000\
  KILL\000\
  LEFT_TITLEBUTTON\000\
  RIGHT_TITLEBUTTON\000\
  WINDOW_RING\000\
  WARP_CURSOR\000\
  ERRORTOKEN\000\
  NO_STACKMODE\000\
  "

let yynames_block = "\
  NUMBER\000\
  KEYWORD\000\
  NKEYWORD\000\
  CKEYWORD\000\
  CLKEYWORD\000\
  FKEYWORD\000\
  FSKEYWORD\000\
  SKEYWORD\000\
  DKEYWORD\000\
  JKEYWORD\000\
  STRING\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    Obj.repr(
# 47 "twm_p.mly"
                           ( _1 )
# 778 "twm_p.ml"
               : Twm_t.twm list))
; (fun __caml_parser_env ->
    Obj.repr(
# 49 "twm_p.mly"
                             ( [] )
# 784 "twm_p.ml"
               : 'stmts))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'stmt) in
    Obj.repr(
# 50 "twm_p.mly"
                   ( _2 :: _1 )
# 792 "twm_p.ml"
               : 'stmts))
; (fun __caml_parser_env ->
    Obj.repr(
# 54 "twm_p.mly"
        ( Error )
# 798 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'noarg) in
    Obj.repr(
# 55 "twm_p.mly"
        ( _1 )
# 805 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sarg) in
    Obj.repr(
# 56 "twm_p.mly"
       ( _1 )
# 812 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'narg) in
    Obj.repr(
# 57 "twm_p.mly"
       ( _1 )
# 819 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'squeeze) in
    Obj.repr(
# 58 "twm_p.mly"
          ( _1 )
# 826 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : Twm_t.dkeyword) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : Twm_t.dkeyword) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'number) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 60 "twm_p.mly"
    ( AddIconRegion(_2, _3, _4, _5, _6) )
# 837 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 61 "twm_p.mly"
                                   ( IconMgrGeometry(_2,Some _3) )
# 845 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 62 "twm_p.mly"
                            ( IconMgrGeometry(_2,None) )
# 852 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 63 "twm_p.mly"
                   ( ZoomCount _2 )
# 859 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 64 "twm_p.mly"
                   ( ZoomCount (-1) )
# 865 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'pixmap_list) in
    Obj.repr(
# 65 "twm_p.mly"
                        ( Pixmap_list _2 )
# 872 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'cursor_list) in
    Obj.repr(
# 66 "twm_p.mly"
                        ( Cursor_list _2 )
# 879 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 67 "twm_p.mly"
                                  ( IconifyByUnmapping _2 )
# 886 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 68 "twm_p.mly"
                         ( IconifyByUnmappingAll )
# 892 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 69 "twm_p.mly"
                                        ( TitleButton (_2, _4, false) )
# 900 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 70 "twm_p.mly"
                                         ( TitleButton (_2, _4, true) )
# 908 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'button) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 71 "twm_p.mly"
                     ( ButtonMenu (_1,_2) )
# 916 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'button) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 72 "twm_p.mly"
                     ( ButtonAction (_1,_2) )
# 924 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'keys) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'contextkeys) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 73 "twm_p.mly"
                                                      ( Key(_1, _3,_5,_7) )
# 934 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : 'button) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'keys) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'contexts) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 74 "twm_p.mly"
                                                   ( Button(_1, _3,_5,_7) )
# 944 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 75 "twm_p.mly"
                                     ( DontIconify _2 )
# 951 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 76 "twm_p.mly"
                             ( IconManagerNoShow _2 )
# 958 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 77 "twm_p.mly"
                   ( IconManagerNoShowAll )
# 964 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'iconm_list) in
    Obj.repr(
# 78 "twm_p.mly"
                      ( IconMgrs _2 )
# 971 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 79 "twm_p.mly"
                          ( IconManagerShow _2 )
# 978 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 80 "twm_p.mly"
                            ( NoTitleHighlight _2 )
# 985 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 81 "twm_p.mly"
                    ( NoTitleHighlightAll  )
# 991 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 82 "twm_p.mly"
                     ( NoHighlight _2 )
# 998 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 83 "twm_p.mly"
                 ( NoHighlightAll  )
# 1004 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 84 "twm_p.mly"
                        ( NoStackMode _2 )
# 1011 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 85 "twm_p.mly"
                   ( NoStackModeAll )
# 1017 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 86 "twm_p.mly"
                        ( NoTitlebar _2 )
# 1024 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 87 "twm_p.mly"
                        ( NoTitlebarAll )
# 1030 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 88 "twm_p.mly"
                           ( MakeTitle _2 )
# 1037 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 89 "twm_p.mly"
                             ( StartIconified _2 )
# 1044 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 90 "twm_p.mly"
                           ( AutoRaise _2 )
# 1051 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 6 : 'string) in
    let _4 = (Parsing.peek_val __caml_parser_env 4 : 'string) in
    let _6 = (Parsing.peek_val __caml_parser_env 2 : 'string) in
    let _8 = (Parsing.peek_val __caml_parser_env 0 : 'menu) in
    Obj.repr(
# 91 "twm_p.mly"
                                             ( 
    RootMenu(_2,Some _4,Some _6,_8) )
# 1062 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'menu) in
    Obj.repr(
# 93 "twm_p.mly"
                         ( RootMenu(_2, None, None, _3) )
# 1070 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'fonction) in
    Obj.repr(
# 94 "twm_p.mly"
                             ( RootFunction(_2, _3) )
# 1078 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'icon_list) in
    Obj.repr(
# 95 "twm_p.mly"
                        ( IconNames _2 )
# 1085 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'color_list) in
    Obj.repr(
# 96 "twm_p.mly"
                        ( ColorList _2 )
# 1092 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'color_list) in
    Obj.repr(
# 97 "twm_p.mly"
                            ( GrayscaleList _2 )
# 1099 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'save_color_list) in
    Obj.repr(
# 98 "twm_p.mly"
                             ( SaveColorList _2 )
# 1106 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'color_list) in
    Obj.repr(
# 99 "twm_p.mly"
                              ( Monochrome _2 )
# 1113 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 100 "twm_p.mly"
                          ( DefaultFunction _2 )
# 1120 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 101 "twm_p.mly"
                         ( WindowFunction _2 )
# 1127 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 102 "twm_p.mly"
                            ( WarpCursorList _2 )
# 1134 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 103 "twm_p.mly"
                   ( WarpCursorAll )
# 1140 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 104 "twm_p.mly"
                            ( WindowRingList _2 )
# 1147 "twm_p.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Twm_t.keyword) in
    Obj.repr(
# 106 "twm_p.mly"
                              ( NoArg _1 )
# 1154 "twm_p.ml"
               : 'noarg))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Twm_t.skeyword) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 107 "twm_p.mly"
                                  ( StringArg (_1,_2) )
# 1162 "twm_p.ml"
               : 'sarg))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Twm_t.nkeyword) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 108 "twm_p.mly"
                                  ( NumberArg (_1,_2) )
# 1170 "twm_p.ml"
               : 'narg))
; (fun __caml_parser_env ->
    Obj.repr(
# 110 "twm_p.mly"
                               ( 0 )
# 1176 "twm_p.ml"
               : 'keys))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'keys) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'key) in
    Obj.repr(
# 111 "twm_p.mly"
                             ( _2 lor _1 )
# 1184 "twm_p.ml"
               : 'keys))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'keys) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'keys) in
    Obj.repr(
# 112 "twm_p.mly"
                                 ( _3 lor _1 )
# 1192 "twm_p.ml"
               : 'keys))
; (fun __caml_parser_env ->
    Obj.repr(
# 114 "twm_p.mly"
                    ( mod1Mask )
# 1198 "twm_p.ml"
               : 'key))
; (fun __caml_parser_env ->
    Obj.repr(
# 115 "twm_p.mly"
                ( shiftMask )
# 1204 "twm_p.ml"
               : 'key))
; (fun __caml_parser_env ->
    Obj.repr(
# 116 "twm_p.mly"
                ( lockMask )
# 1210 "twm_p.ml"
               : 'key))
; (fun __caml_parser_env ->
    Obj.repr(
# 117 "twm_p.mly"
                ( controlMask )
# 1216 "twm_p.ml"
               : 'key))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 118 "twm_p.mly"
                ( mod1Mask lsl (_2 - 1) )
# 1223 "twm_p.ml"
               : 'key))
; (fun __caml_parser_env ->
    Obj.repr(
# 121 "twm_p.mly"
                             ( [] )
# 1229 "twm_p.ml"
               : 'contexts))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'contexts) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'context) in
    Obj.repr(
# 122 "twm_p.mly"
                         ( _2 :: _1 )
# 1237 "twm_p.ml"
               : 'contexts))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'contexts) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'contexts) in
    Obj.repr(
# 123 "twm_p.mly"
                             ( _3 @ _1 )
# 1245 "twm_p.ml"
               : 'contexts))
; (fun __caml_parser_env ->
    Obj.repr(
# 125 "twm_p.mly"
                               ( C_WINDOW )
# 1251 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 126 "twm_p.mly"
                ( C_TITLE )
# 1257 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 127 "twm_p.mly"
               ( C_ICON )
# 1263 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 128 "twm_p.mly"
               ( C_ROOT )
# 1269 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 129 "twm_p.mly"
                ( C_FRAME )
# 1275 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 130 "twm_p.mly"
               ( C_ICONMGR )
# 1281 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 131 "twm_p.mly"
               ( C_ICONMGR )
# 1287 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 132 "twm_p.mly"
              ( C_ALL )
# 1293 "twm_p.ml"
               : 'context))
; (fun __caml_parser_env ->
    Obj.repr(
# 134 "twm_p.mly"
                                ( [] )
# 1299 "twm_p.ml"
               : 'contextkeys))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'contextkeys) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'contextkey) in
    Obj.repr(
# 135 "twm_p.mly"
                              ( _2 :: _1 )
# 1307 "twm_p.ml"
               : 'contextkeys))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'contextkeys) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'contextkeys) in
    Obj.repr(
# 136 "twm_p.mly"
                                  ( _3 @ _1 )
# 1315 "twm_p.ml"
               : 'contextkeys))
; (fun __caml_parser_env ->
    Obj.repr(
# 139 "twm_p.mly"
                               ( C_WINDOW )
# 1321 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    Obj.repr(
# 140 "twm_p.mly"
                ( C_TITLE )
# 1327 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    Obj.repr(
# 141 "twm_p.mly"
               ( C_ICON )
# 1333 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    Obj.repr(
# 142 "twm_p.mly"
               ( C_ROOT )
# 1339 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    Obj.repr(
# 143 "twm_p.mly"
                ( C_FRAME )
# 1345 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    Obj.repr(
# 144 "twm_p.mly"
               ( C_ICONMGR )
# 1351 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    Obj.repr(
# 145 "twm_p.mly"
               ( C_ICONMGR )
# 1357 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    Obj.repr(
# 146 "twm_p.mly"
              ( C_ALL )
# 1363 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 147 "twm_p.mly"
              ( C_NAME _1 )
# 1370 "twm_p.ml"
               : 'contextkey))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'pixmap_entries) in
    Obj.repr(
# 149 "twm_p.mly"
                                         ( List.rev _2 )
# 1377 "twm_p.ml"
               : 'pixmap_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 151 "twm_p.mly"
                                   ( [] )
# 1383 "twm_p.ml"
               : 'pixmap_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'pixmap_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'pixmap_entry) in
    Obj.repr(
# 152 "twm_p.mly"
                                 ( _2 :: _1 )
# 1391 "twm_p.ml"
               : 'pixmap_entries))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 154 "twm_p.mly"
                                         ( _2 )
# 1398 "twm_p.ml"
               : 'pixmap_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'cursor_entries) in
    Obj.repr(
# 156 "twm_p.mly"
                                         ( List.rev _2 )
# 1405 "twm_p.ml"
               : 'cursor_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 158 "twm_p.mly"
                                   ( [] )
# 1411 "twm_p.ml"
               : 'cursor_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'cursor_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'cursor_entry) in
    Obj.repr(
# 159 "twm_p.mly"
                                 ( _2 :: _1 )
# 1419 "twm_p.ml"
               : 'cursor_entries))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 161 "twm_p.mly"
                                       ( 
    NewBitmapCursor( FrameCursor, _2, _3) )
# 1428 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 163 "twm_p.mly"
                       ( NewFontCursor(FrameCursor, _2) )
# 1435 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 164 "twm_p.mly"
                       (  NewBitmapCursor(TitleCursor, _2, _3) )
# 1443 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 165 "twm_p.mly"
                       ( NewFontCursor(TitleCursor, _2) )
# 1450 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 166 "twm_p.mly"
                       ( NewBitmapCursor( IconCursor, _2, _3) )
# 1458 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 167 "twm_p.mly"
                       ( NewFontCursor( IconCursor, _2) )
# 1465 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 168 "twm_p.mly"
                        (
    NewBitmapCursor(IconMgrCursor, _2, _3) )
# 1474 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 170 "twm_p.mly"
                 (
    NewFontCursor( IconMgrCursor, _2) )
# 1482 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 172 "twm_p.mly"
                       (
    NewBitmapCursor( ButtonCursor, _2, _3) )
# 1491 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 174 "twm_p.mly"
                (
    NewFontCursor( ButtonCursor, _2) )
# 1499 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 176 "twm_p.mly"
                     (
    NewBitmapCursor( MoveCursor, _2, _3) )
# 1508 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 178 "twm_p.mly"
              (
    NewFontCursor( MoveCursor, _2) )
# 1516 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 180 "twm_p.mly"
                       (
    NewBitmapCursor(ResizeCursor, _2, _3) )
# 1525 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 182 "twm_p.mly"
                (
    NewFontCursor(ResizeCursor, _2) )
# 1533 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 184 "twm_p.mly"
                     ( NewBitmapCursor(WaitCursor, _2, _3) )
# 1541 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 185 "twm_p.mly"
              ( NewFontCursor(WaitCursor, _2) )
# 1548 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 186 "twm_p.mly"
                     ( NewBitmapCursor(MenuCursor, _2, _3) )
# 1556 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 187 "twm_p.mly"
              ( NewFontCursor(MenuCursor, _2) )
# 1563 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 188 "twm_p.mly"
                       ( NewBitmapCursor(SelectCursor, _2, _3) )
# 1571 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 189 "twm_p.mly"
                ( NewFontCursor(SelectCursor, _2) )
# 1578 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 190 "twm_p.mly"
                     ( NewBitmapCursor(DestroyCursor, _2, _3) )
# 1586 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 191 "twm_p.mly"
              ( NewFontCursor(DestroyCursor, _2) )
# 1593 "twm_p.ml"
               : 'cursor_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'color_entries) in
    Obj.repr(
# 194 "twm_p.mly"
                                       ( List.rev _2 )
# 1600 "twm_p.ml"
               : 'color_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 198 "twm_p.mly"
                                  ( [] )
# 1606 "twm_p.ml"
               : 'color_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'color_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'color_entry) in
    Obj.repr(
# 199 "twm_p.mly"
                               ( _2 :: _1 )
# 1614 "twm_p.ml"
               : 'color_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Twm_t.clkeyword) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 202 "twm_p.mly"
                                       (  _1,_2,[] )
# 1622 "twm_p.ml"
               : 'color_entry))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Twm_t.clkeyword) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'win_color_list) in
    Obj.repr(
# 203 "twm_p.mly"
                                     ( _1,_2,_3 )
# 1631 "twm_p.ml"
               : 'color_entry))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Twm_t.clkeyword) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 204 "twm_p.mly"
                    ( _1,_2,[] )
# 1639 "twm_p.ml"
               : 'color_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 's_color_entries) in
    Obj.repr(
# 206 "twm_p.mly"
                                            ( List.rev _2 )
# 1646 "twm_p.ml"
               : 'save_color_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 209 "twm_p.mly"
                                   ( [] )
# 1652 "twm_p.ml"
               : 's_color_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 's_color_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 's_color_entry) in
    Obj.repr(
# 210 "twm_p.mly"
                                 ( _2 :: _1 )
# 1660 "twm_p.ml"
               : 's_color_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 213 "twm_p.mly"
                                        ( SaveColor _1 )
# 1667 "twm_p.ml"
               : 's_color_entry))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Twm_t.clkeyword) in
    Obj.repr(
# 214 "twm_p.mly"
                    ( SaveColorVar _1 )
# 1674 "twm_p.ml"
               : 's_color_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'win_color_entries) in
    Obj.repr(
# 217 "twm_p.mly"
                                               ( List.rev _2 )
# 1681 "twm_p.ml"
               : 'win_color_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 220 "twm_p.mly"
                                      ( [] )
# 1687 "twm_p.ml"
               : 'win_color_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'win_color_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_color_entry) in
    Obj.repr(
# 221 "twm_p.mly"
                                    ( _2 :: _1 )
# 1695 "twm_p.ml"
               : 'win_color_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 224 "twm_p.mly"
                                           (  _1, _2 )
# 1703 "twm_p.ml"
               : 'win_color_entry))
; (fun __caml_parser_env ->
    Obj.repr(
# 227 "twm_p.mly"
                                 ( SqueezeTitleAll )
# 1709 "twm_p.ml"
               : 'squeeze))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'win_sqz_entries) in
    Obj.repr(
# 228 "twm_p.mly"
                                       ( SqueezeTitleList _3 )
# 1716 "twm_p.ml"
               : 'squeeze))
; (fun __caml_parser_env ->
    Obj.repr(
# 229 "twm_p.mly"
                     ( DontSqueezeTitleAll )
# 1722 "twm_p.ml"
               : 'squeeze))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_list) in
    Obj.repr(
# 230 "twm_p.mly"
                              ( DontSqueezeTitleList _2 )
# 1729 "twm_p.ml"
               : 'squeeze))
; (fun __caml_parser_env ->
    Obj.repr(
# 233 "twm_p.mly"
                                    ( [] )
# 1735 "twm_p.ml"
               : 'win_sqz_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : 'win_sqz_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : Twm_t.jkeyword) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'signed_number) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 234 "twm_p.mly"
                                                         (
    (_2, _3, _4, _5) :: _1  )
# 1747 "twm_p.ml"
               : 'win_sqz_entries))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'iconm_entries) in
    Obj.repr(
# 238 "twm_p.mly"
                                       ( List.rev _2 )
# 1754 "twm_p.ml"
               : 'iconm_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 240 "twm_p.mly"
                                  ( [] )
# 1760 "twm_p.ml"
               : 'iconm_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'iconm_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'iconm_entry) in
    Obj.repr(
# 241 "twm_p.mly"
                                ( _2 :: _1 )
# 1768 "twm_p.ml"
               : 'iconm_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'string) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 244 "twm_p.mly"
                                           ( _1,None,_2,_3 )
# 1777 "twm_p.ml"
               : 'iconm_entry))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'string) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 245 "twm_p.mly"
                                         ( _1,Some _2,_3, _4  )
# 1787 "twm_p.ml"
               : 'iconm_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'win_entries) in
    Obj.repr(
# 248 "twm_p.mly"
                                   ( List.rev _2 )
# 1794 "twm_p.ml"
               : 'win_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 251 "twm_p.mly"
                                ( [] )
# 1800 "twm_p.ml"
               : 'win_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'win_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'win_entry) in
    Obj.repr(
# 252 "twm_p.mly"
                              ( _2 :: _1 )
# 1808 "twm_p.ml"
               : 'win_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 255 "twm_p.mly"
                              ( _1 )
# 1815 "twm_p.ml"
               : 'win_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'icon_entries) in
    Obj.repr(
# 258 "twm_p.mly"
                                     ( List.rev _2 )
# 1822 "twm_p.ml"
               : 'icon_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 261 "twm_p.mly"
                                 ( [] )
# 1828 "twm_p.ml"
               : 'icon_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'icon_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'icon_entry) in
    Obj.repr(
# 262 "twm_p.mly"
                               ( _2 :: _1 )
# 1836 "twm_p.ml"
               : 'icon_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 265 "twm_p.mly"
                                      ( _1,_2 )
# 1844 "twm_p.ml"
               : 'icon_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'function_entries) in
    Obj.repr(
# 268 "twm_p.mly"
                                        ( List.rev _2 )
# 1851 "twm_p.ml"
               : 'fonction))
; (fun __caml_parser_env ->
    Obj.repr(
# 271 "twm_p.mly"
                                  ( [] )
# 1857 "twm_p.ml"
               : 'function_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'function_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'function_entry) in
    Obj.repr(
# 272 "twm_p.mly"
                                  (  _2 :: _1 )
# 1865 "twm_p.ml"
               : 'function_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 275 "twm_p.mly"
                                   ( _1 )
# 1872 "twm_p.ml"
               : 'function_entry))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'menu_entries) in
    Obj.repr(
# 277 "twm_p.mly"
                                   ( List.rev _2 )
# 1879 "twm_p.ml"
               : 'menu))
; (fun __caml_parser_env ->
    Obj.repr(
# 279 "twm_p.mly"
                                 ( [] )
# 1885 "twm_p.ml"
               : 'menu_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'menu_entries) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'menu_entry) in
    Obj.repr(
# 280 "twm_p.mly"
                             ( _2 :: _1 )
# 1893 "twm_p.ml"
               : 'menu_entries))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 282 "twm_p.mly"
                                      ( _1, _2, None,None )
# 1901 "twm_p.ml"
               : 'menu_entry))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : 'string) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'string) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'string) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'action) in
    Obj.repr(
# 283 "twm_p.mly"
                                          ( _1, _7, Some _3, Some _5 )
# 1911 "twm_p.ml"
               : 'menu_entry))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Twm_t.fkeyword) in
    Obj.repr(
# 286 "twm_p.mly"
                             ( Action _1 )
# 1918 "twm_p.ml"
               : 'action))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Twm_t.fskeyword) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'string) in
    Obj.repr(
# 287 "twm_p.mly"
                   ( ActionString (_1,_2) )
# 1926 "twm_p.ml"
               : 'action))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 291 "twm_p.mly"
                                  ( _1 )
# 1933 "twm_p.ml"
               : 'signed_number))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 292 "twm_p.mly"
                   ( _2 )
# 1940 "twm_p.ml"
               : 'signed_number))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 293 "twm_p.mly"
                    ( -(_2) )
# 1947 "twm_p.ml"
               : 'signed_number))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 296 "twm_p.mly"
                                     ( _2 )
# 1954 "twm_p.ml"
               : 'button))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 299 "twm_p.mly"
                              ( _1 )
# 1961 "twm_p.ml"
               : 'string))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 300 "twm_p.mly"
                              ( _1 )
# 1968 "twm_p.ml"
               : 'number))
(* Entry twmrc *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let twmrc (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Twm_t.twm list)
;;
# 304 "twm_p.mly"
  
# 1995 "twm_p.ml"
